generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Two roles only: ADMIN & USER
enum Role {
  ADMIN
  USER
}

/// Users of the system: admins or drivers
model User {
  id                  String   @id @default(uuid())
  firstName           String   @map("first_name")
  lastName            String   @map("last_name")
  email               String   @unique
  password            String
  role                Role     @default(USER)
  vehiclePlateNumber  String?  @map("vehicle_plate_number")
  tickets             Ticket[]

  createdAt           DateTime @default(now()) @map("created_at")
  updatedAt           DateTime @updatedAt       @map("updated_at")

  @@map("users")
}

/// Parking lots
model Parking {
  id                     String   @id @default(uuid())
  code                   String   @unique
  name                   String
  address                String
  numberOfAvailableSpace Int      @map("number_of_available_space")
  chargingFeePerHour     Float    @map("charging_fee_per_hour")
  tickets                Ticket[]

  createdAt              DateTime @default(now()) @map("created_at")
  updatedAt              DateTime @updatedAt       @map("updated_at")

  @@map("parkings")
}

/// Tickets for check-in / check-out
model Ticket {
  id            String   @id @default(uuid())
  user          User     @relation(fields: [userId], references: [id])
  userId        String   @map("user_id")
  parking       Parking  @relation(fields: [parkingId], references: [id])
  parkingId     String   @map("parking_id")
  entryTime     DateTime @default(now()) @map("entry_time")
  exitTime      DateTime? @map("exit_time")
  chargedAmount Float    @default(0) @map("charged_amount")

  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt       @map("updated_at")

  @@map("tickets")
}
